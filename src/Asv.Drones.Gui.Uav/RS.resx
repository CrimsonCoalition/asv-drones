<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SerialPortViewModel_SerialPortViewModel_You_must_specify_a_valid_name" xml:space="preserve">
    <value>You must specify a valid name</value>
  </data>
  <data name="SerialPortViewModel_SerialPortViewModel_ValidSerialPort" xml:space="preserve">
    <value>You must specify a valid serial port name</value>
  </data>
  <data name="SerialPortViewModel_SerialPortViewModel_BaudRateValid" xml:space="preserve">
    <value>Baud rate must be value from {0} to {1}</value>
  </data>
  <data name="SerialPortViewModel_SerialPortViewModel_NewSerial" xml:space="preserve">
    <value>New serial {0}</value>
  </data>
  <data name="SerialPortView_Title" xml:space="preserve">
    <value>Port title</value>
  </data>
  <data name="SerialPortView_PortName" xml:space="preserve">
    <value>Port name</value>
  </data>
  <data name="SerialPortView_BaudRate" xml:space="preserve">
    <value>Baud rate</value>
  </data>
  <data name="ConnectionsShellMenuItem_Name" xml:space="preserve">
    <value>Connections</value>
  </data>
  <data name="ConnectionsViewModel_AddDialogPort_Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="ConnectionsViewModel_AddDialogPort_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ConnectionsViewModel_AddSerialPortDialog_Title" xml:space="preserve">
    <value>Add new Mavlink serial port</value>
  </data>
  <data name="ConnectionsViewModel_AddTcpPortDialog_Title" xml:space="preserve">
    <value>Add new Mavlink TCP port</value>
  </data>
  <data name="ConnectionsViewModel_AddUdpPortDialog_Title" xml:space="preserve">
    <value>Add new Mavlink UDP port</value>
  </data>
  <data name="PortView_ToggleButton_Enabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="PortView_ToggleButton_Disabled" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="ConnectionsPortsView_AddSerialCommand_Title" xml:space="preserve">
    <value>Add Serial</value>
  </data>
  <data name="ConnectionsPortsView_AddTcpCommand_Title" xml:space="preserve">
    <value>Add TCP</value>
  </data>
  <data name="ConnectionsPortsView_AddUdpCommand_Title" xml:space="preserve">
    <value>Add UDP</value>
  </data>
  <data name="ConnectionsPortsView_Header_Title" xml:space="preserve">
    <value>Connections ports</value>
  </data>
  <data name="ConnectionsView_Header_Description" xml:space="preserve">
    <value>This page allows you to configure the basic settings on the Mavlink network</value>
  </data>
  <data name="ConnectionsView_Header_Title" xml:space="preserve">
    <value>Mavlink network</value>
  </data>
  <data name="ConnectionsPortsView_Header_Description" xml:space="preserve">
    <value>Point of entry that allows it to communicate with other devices in Mavlink network.</value>
  </data>
  <data name="DeviceBrowserView_Description" xml:space="preserve">
    <value>In this section you can see all found devices on the network</value>
  </data>
  <data name="DeviceBrowserView_Header" xml:space="preserve">
    <value>Device list</value>
  </data>
  <data name="ConnectionsIdentificationView_HeartbeatRate_Description" xml:space="preserve">
    <value>The rate at which the HEARTBEAT message must be transmitted to announce the existence of the system on the MAVLink network</value>
  </data>
  <data name="ConnectionsIdentificationView_HeartbeatRate_Header" xml:space="preserve">
    <value>Heartbeat rate</value>
  </data>
  <data name="ConnectionsIdentificationView_HeartbeatTimeout_Description" xml:space="preserve">
    <value>After that timeout of Heartbeat packet deviceService will be removed from deviceService list</value>
  </data>
  <data name="ConnectionsIdentificationView_HeartbeatTimeout_Header" xml:space="preserve">
    <value>Heartbeat timeout</value>
  </data>
  <data name="ConnectionsIdentificationView_SystemComponentId_Description" xml:space="preserve">
    <value>Each system has a network-unique system id, and each component has a system-unique component id that can be used for addressing/routing</value>
  </data>
  <data name="ConnectionsIdentificationView_SystemComponentId_Header" xml:space="preserve">
    <value>System \ Component ID</value>
  </data>
  <data name="MavlinkDeviceView_Mode_Name" xml:space="preserve">
    <value>Custom mode</value>
  </data>
  <data name="MavlinkDeviceView_Rate_Name" xml:space="preserve">
    <value>Heartbeat rate</value>
  </data>
  <data name="MavlinkDeviceView_Status_Name" xml:space="preserve">
    <value>System status</value>
  </data>
  <data name="TcpPortView_TcpIpAddress" xml:space="preserve">
    <value>IP address</value>
  </data>
  <data name="TcpPortView_PortTitle" xml:space="preserve">
    <value>Port title</value>
  </data>
  <data name="TcpPortView_TcpIpPort" xml:space="preserve">
    <value>Port number</value>
  </data>
  <data name="UdpPortView_LocalIpAddress" xml:space="preserve">
    <value>IP Address</value>
  </data>
  <data name="UdpPortView_LocalPortName" xml:space="preserve">
    <value>Port Number</value>
  </data>
  <data name="UdpPortView_PortTitle" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="UdpPortView_RemoteIpAddress" xml:space="preserve">
    <value>Remote IP Address</value>
  </data>
  <data name="UdpPortView_RemotePortName" xml:space="preserve">
    <value>Remote port number</value>
  </data>
  <data name="UdpPortView_ToggleName" xml:space="preserve">
    <value>Specify remote host</value>
  </data>
  <data name="ConnectionsIdentificationViewModel_DeviceTimeout" xml:space="preserve">
    <value>Timeout must be from {0} to {1}</value>
  </data>
  <data name="ConnectionsIdentificationViewModel_ToString" xml:space="preserve">
    <value>Hz</value>
  </data>
  <data name="PortViewModel_SkippedUnitTest" xml:space="preserve">
    <value>error</value>
  </data>
  <data name="RoiAnchor_Vehicle_Yaw_Sample_Description" xml:space="preserve">
    <value>Yaw angle</value>
  </data>
  <data name="RoiAnchor_Vehicle_Yaw_Sample_Unit" xml:space="preserve">
    <value>deg</value>
  </data>
  <data name="TcpPortViewModel_Title" xml:space="preserve">
    <value>New TCP</value>
  </data>
  <data name="TcpPortViewModel_ValidTitle" xml:space="preserve">
    <value>You must specify a valid name</value>
  </data>
  <data name="TcpPortViewModel_ValidPort" xml:space="preserve">
    <value>Port number must be value from 1 to 65535</value>
  </data>
  <data name="TcpPortViewModel_ValidIpAddress" xml:space="preserve">
    <value>You must insert a valid ip address</value>
  </data>
  <data name="TcpPortViewModel_LogService_Error" xml:space="preserve">
    <value>Error to create port</value>
  </data>
  <data name="UdpPortViewModel_ValidTitle" xml:space="preserve">
    <value>You must specify a valid name</value>
  </data>
  <data name="UdpPortViewModel_ValidLocalIpAddress" xml:space="preserve">
    <value>You must enter a valid IP address</value>
  </data>
  <data name="UdpPortViewModel_ValidLocalPort" xml:space="preserve">
    <value>Port number must be a value between 1 and 65535</value>
  </data>
  <data name="UdpPortViewModel_ValidRemotePort" xml:space="preserve">
    <value>Port number must be a value between 1 and 65535</value>
  </data>
  <data name="UdpPortViewModel_ValidRemoteIpAddress" xml:space="preserve">
    <value>You must enter a valid IP address</value>
  </data>
  <data name="UdpPortViewModel_Title" xml:space="preserve">
    <value>New UDP</value>
  </data>
  <data name="RoiAnchor_Vehicle_Name" xml:space="preserve">
    <value>ROI of</value>
  </data>
  <data name="TakeOffAnchorActionViewModel_Title" xml:space="preserve">
    <value>Take off</value>
  </data>
  <data name="TakeOffAnchorActionViewModel_DialogDescription" xml:space="preserve">
    <value>Set altitude above ground level (AGL) for takeoff command.</value>
  </data>
  <data name="TakeOffAnchorActionViewModel_DialogPrimaryButton" xml:space="preserve">
    <value>Take off</value>
  </data>
  <data name="TakeOffAnchorActionViewModel_DialogSecondaryButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="TakeOffAnchorActionViewModel_ValidValue" xml:space="preserve">
    <value>Altitude must be greater or equal {0}.</value>
  </data>
  <data name="TakeOffAnchorActionViewModel_LogMessage" xml:space="preserve">
    <value>User send TakeOff at {0} altitude for {1}</value>
  </data>
</root>